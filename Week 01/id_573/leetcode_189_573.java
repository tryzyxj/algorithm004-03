class Solution {    /***     * 给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。     * @param nums     * @param k     */    public int[] rotate(int[] nums, int k) {        int len = nums.length;        if (k == len) {            return nums;        }        if (k > len) {            k = k % len;        }        //暴力        int[] num = new int[len];        for (int i = 0; i < k; i++) {            num[i] = nums[len - k + i];        }        for (int i = 0; i < len - k; i++) {            num[k + i] = nums[i];        }        //方案二        swop(nums, 0, len - k - 1);        swop(nums, len - k, len - 1);        swop(nums, 0, len - 1);        return num;    }    private void swop(int[] nums, int start, int end) {        while (start < end) {            int tmp = nums[start];            nums[start] = nums[end];            nums[end] = tmp;            start++;            end--;        }    }    public static void main(String[] args) {        Solution solution = new Solution();        //输入: [1,2,3,4,5,6,7] 和 k = 3        int[] nss = new int[]{1, 2, 3, 4, 5, 6, 7};        nss = solution.rotate(nss, 3);        for (int i : nss) {            System.out.println(i + " ");        }    }}